my $VEP_PLUGIN_CONFIG = {
  "plugins" => [

    ## PATHOGENICITY PREDICTIONS
    ############################

    # dbNSFP
    # https://github.com/ensembl-variation/VEP_plugins/blob/main/dbNSFP.pm
    # Requires tabix-indexed data file as first param
    # Field names are listed below and rendered as a multi-selectable autocomplete text field
    # Human, GRCh38 only (3.x), for GRCh37 use 2.9.x
    {
      "key" => "dbNSFP",
      "label" => "dbNSFP",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "helptip" => "dbNSFP provides pathogenicity predictions for missense variants from various algorithms. The scores are provided for non-commercial use, for more details, including using the data commercially, please see https://www.dbnsfp.org/",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/dbNSFP.pm",
      "requires_data" => 1,
      "requires_install" => 1,
      "params"  => [
        #"/path/to/dbNSFP5.2c_grch38.gz",
        "@*"
      ],
      "species" => [
        "homo_sapiens"
      ],
      "form" => [
        {
          "name" => "dbNSFP_fields",
          "label" => "Fields to include",
          "helptip" => "Fields to fetch from dbNSFP; hold down the Ctrl (Windows) / Command (Mac) button to select multiple options",
          "value" => "",
          'type' => 'dropdown',
          'multiple' => 1,
          'style' => 'height:150px',
          'required' => 1,
          'notes' => 'Field descriptions in <a rel="external" href="https://download.genos.us/dbnsfp/release/dbNSFP5.2c.readme.txt">dbNSFP README</a>',
          # "class" => "jquery-multiselect",
          "values" => [
              #"chr",
              #"pos(1-based)",
              #"ref",
              #"alt",
              #"aaref",
              #"aaalt",
              #"rs_dbSNP",
              #"hg19_chr",
              #"hg19_pos(1-based)",
              #"hg18_chr",
              #"hg18_pos(1-based)",
              "aapos",
              "genename",
              "Ensembl_geneid",
              "Ensembl_transcriptid",
              "Ensembl_proteinid",
              "Uniprot_acc",
              "Uniprot_entry",
              #"HGVSc_snpEff",
              #"HGVSp_snpEff",
              #"HGVSc_VEP",
              #"HGVSp_VEP",
              #"APPRIS",
              #"GENCODE_basic",
              #"TSL",
              #"VEP_canonical",
              #"MANE",
              #"cds_strand",
              #"refcodon",
              #"codonpos",
              "codon_degeneracy",
              #"Ancestral_allele",
              "AltaiNeandertal",
              "Denisova",
              "VindijiaNeandertal",
              "ChagyrskayaNeandertal",
              "clinvar_id",
              "clinvar_clnsig",
              "clinvar_trait",
              "clinvar_review",
              "clinvar_hgvs",
              "clinvar_var_source",
              "clinvar_MedGen_id",
              "clinvar_OMIM_id",
              "clinvar_Orphanet_id",
              "Interpro_domain",
              #"SIFT_score",
              #"SIFT_converted_rankscore",
              #"SIFT_pred",
              #"SIFT4G_score",
              #"SIFT4G_converted_rankscore",
              #"SIFT4G_pred",
              "MutationTaster_score",
              "MutationTaster_rankscore",
              "MutationTaster_pred",
              "MutationTaster_model",
              "MutationTaster_trees_benign",
              "MutationTaster_trees_deleterious",
              "MutationAssessor_score",
              "MutationAssessor_rankscore",
              "MutationAssessor_pred",
              "PROVEAN_score",
              "PROVEAN_converted_rankscore",
              "PROVEAN_pred",
              "MetaSVM_score",
              "MetaSVM_rankscore",
              "MetaSVM_pred",
              "MetaLR_score",
              "MetaLR_rankscore",
              "MetaLR_pred",
              "Reliability_index",
              "MetaRNN_score",
              "MetaRNN_rankscore",
              "MetaRNN_pred",
              "REVEL_score",
              "REVEL_rankscore",
              "MutPred2_score",
              "MutPred2_rankscore",
              "MutPred2_pred",
              "MutPred2_top5_mechanisms",
              "MVP_score",
              "MVP_rankscore",
              "gMVP_score",
              "gMVP_rankscore",
              "MPC_score",
              "MPC_rankscore",
              "PrimateAI_score",
              "PrimateAI_rankscore",
              "PrimateAI_pred",
              "DEOGEN2_score",
              "DEOGEN2_rankscore",
              "DEOGEN2_pred",
              "BayesDel_addAF_score",
              "BayesDel_addAF_rankscore",
              "BayesDel_addAF_pred",
              "BayesDel_noAF_score",
              "BayesDel_noAF_rankscore",
              "BayesDel_noAF_pred",
              "ClinPred_score",
              "ClinPred_rankscore",
              "ClinPred_pred",
              "LIST-S2_score",
              "LIST-S2_rankscore",
              "LIST-S2_pred",
              "VARITY_R_score",
              "VARITY_R_rankscore",
              "VARITY_ER_score",
              "VARITY_ER_rankscore",
              "VARITY_R_LOO_score",
              "VARITY_R_LOO_rankscore",
              "VARITY_ER_LOO_score",
              "VARITY_ER_LOO_rankscore",
              "ESM1b_score",
              "ESM1b_converted_rankscore",
              "ESM1b_pred",
              #"AlphaMissense_score",
              #"AlphaMissense_rankscore",
              #"AlphaMissense_pred",
              "PHACTboost_score",
              "PHACTboost_rankscore",
              "MutFormer_score",
              "MutFormer_rankscore",
              "Aloft_Fraction_transcripts_affected",
              "Aloft_prob_Tolerant",
              "Aloft_prob_Recessive",
              "Aloft_prob_Dominant",
              "Aloft_pred",
              "Aloft_Confidence",
              "DANN_score",
              "DANN_rankscore",
              "fathmm-XF_coding_score",
              "fathmm-XF_coding_rankscore",
              "fathmm-XF_coding_pred",
              "Eigen-raw_coding",
              "Eigen-raw_coding_rankscore",
              "Eigen-phred_coding",
              "Eigen-PC-raw_coding",
              "Eigen-PC-raw_coding_rankscore",
              "Eigen-PC-phred_coding",
              "GERP++_NR",
              "GERP++_RS",
              "GERP++_RS_rankscore",
              "GERP_91_mammals",
              "GERP_91_mammals_rankscore",
              "phyloP100way_vertebrate",
              "phyloP100way_vertebrate_rankscore",
              "phyloP470way_mammalian",
              "phyloP470way_mammalian_rankscore",
              "phyloP17way_primate",
              "phyloP17way_primate_rankscore",
              "phastCons100way_vertebrate",
              "phastCons100way_vertebrate_rankscore",
              "phastCons470way_mammalian",
              "phastCons470way_mammalian_rankscore",
              "phastCons17way_primate",
              "phastCons17way_primate_rankscore",
              "bStatistic",
              "bStatistic_converted_rankscore",
              "1000Gp3_AC",
              "1000Gp3_AF",
              "1000Gp3_AFR_AC",
              "1000Gp3_AFR_AF",
              "1000Gp3_EUR_AC",
              "1000Gp3_EUR_AF",
              "1000Gp3_AMR_AC",
              "1000Gp3_AMR_AF",
              "1000Gp3_EAS_AC",
              "1000Gp3_EAS_AF",
              "1000Gp3_SAS_AC",
              "1000Gp3_SAS_AF",
              "TOPMed_frz8_AC",
              "TOPMed_frz8_AN",
              "TOPMed_frz8_AF",
              "AllofUs_ALL_AC",
              "AllofUs_ALL_AN",
              "AllofUs_ALL_AF",
              "AllofUs_AFR_AC",
              "AllofUs_AFR_AN",
              "AllofUs_AFR_AF",
              "AllofUs_AMR_AC",
              "AllofUs_AMR_AN",
              "AllofUs_AMR_AF",
              "AllofUs_EAS_AC",
              "AllofUs_EAS_AN",
              "AllofUs_EAS_AF",
              "AllofUs_EUR_AC",
              "AllofUs_EUR_AN",
              "AllofUs_EUR_AF",
              "AllofUs_MID_AC",
              "AllofUs_MID_AN",
              "AllofUs_MID_AF",
              "AllofUs_SAS_AC",
              "AllofUs_SAS_AN",
              "AllofUs_SAS_AF",
              "AllofUs_OTH_AC",
              "AllofUs_OTH_AN",
              "AllofUs_OTH_AF",
              "AllofUs_POPMAX_AF",
              "AllofUs_POPMAX_AC",
              "AllofUs_POPMAX_AN",
              "AllofUs_POPMAX_POP",
              "gnomAD2.1.1_exomes_flag",
              "gnomAD2.1.1_exomes_controls_AC",
              "gnomAD2.1.1_exomes_controls_AN",
              "gnomAD2.1.1_exomes_controls_AF",
              "gnomAD2.1.1_exomes_controls_nhomalt",
              "gnomAD2.1.1_exomes_non_neuro_AC",
              "gnomAD2.1.1_exomes_non_neuro_AN",
              "gnomAD2.1.1_exomes_non_neuro_AF",
              "gnomAD2.1.1_exomes_non_neuro_nhomalt",
              "gnomAD2.1.1_exomes_non_cancer_AC",
              "gnomAD2.1.1_exomes_non_cancer_AN",
              "gnomAD2.1.1_exomes_non_cancer_AF",
              "gnomAD2.1.1_exomes_non_cancer_nhomalt",
              "gnomAD2.1.1_exomes_controls_AFR_AC",
              "gnomAD2.1.1_exomes_controls_AFR_AN",
              "gnomAD2.1.1_exomes_controls_AFR_AF",
              "gnomAD2.1.1_exomes_controls_AFR_nhomalt",
              "gnomAD2.1.1_exomes_controls_AMR_AC",
              "gnomAD2.1.1_exomes_controls_AMR_AN",
              "gnomAD2.1.1_exomes_controls_AMR_AF",
              "gnomAD2.1.1_exomes_controls_AMR_nhomalt",
              "gnomAD2.1.1_exomes_controls_ASJ_AC",
              "gnomAD2.1.1_exomes_controls_ASJ_AN",
              "gnomAD2.1.1_exomes_controls_ASJ_AF",
              "gnomAD2.1.1_exomes_controls_ASJ_nhomalt",
              "gnomAD2.1.1_exomes_controls_EAS_AC",
              "gnomAD2.1.1_exomes_controls_EAS_AN",
              "gnomAD2.1.1_exomes_controls_EAS_AF",
              "gnomAD2.1.1_exomes_controls_EAS_nhomalt",
              "gnomAD2.1.1_exomes_controls_FIN_AC",
              "gnomAD2.1.1_exomes_controls_FIN_AN",
              "gnomAD2.1.1_exomes_controls_FIN_AF",
              "gnomAD2.1.1_exomes_controls_FIN_nhomalt",
              "gnomAD2.1.1_exomes_controls_NFE_AC",
              "gnomAD2.1.1_exomes_controls_NFE_AN",
              "gnomAD2.1.1_exomes_controls_NFE_AF",
              "gnomAD2.1.1_exomes_controls_NFE_nhomalt",
              "gnomAD2.1.1_exomes_controls_SAS_AC",
              "gnomAD2.1.1_exomes_controls_SAS_AN",
              "gnomAD2.1.1_exomes_controls_SAS_AF",
              "gnomAD2.1.1_exomes_controls_SAS_nhomalt",
              "gnomAD2.1.1_exomes_controls_POPMAX_AC",
              "gnomAD2.1.1_exomes_controls_POPMAX_AN",
              "gnomAD2.1.1_exomes_controls_POPMAX_AF",
              "gnomAD2.1.1_exomes_controls_POPMAX_nhomalt",
              "gnomAD2.1.1_exomes_non_neuro_AFR_AC",
              "gnomAD2.1.1_exomes_non_neuro_AFR_AN",
              "gnomAD2.1.1_exomes_non_neuro_AFR_AF",
              "gnomAD2.1.1_exomes_non_neuro_AFR_nhomalt",
              "gnomAD2.1.1_exomes_non_neuro_AMR_AC",
              "gnomAD2.1.1_exomes_non_neuro_AMR_AN",
              "gnomAD2.1.1_exomes_non_neuro_AMR_AF",
              "gnomAD2.1.1_exomes_non_neuro_AMR_nhomalt",
              "gnomAD2.1.1_exomes_non_neuro_ASJ_AC",
              "gnomAD2.1.1_exomes_non_neuro_ASJ_AN",
              "gnomAD2.1.1_exomes_non_neuro_ASJ_AF",
              "gnomAD2.1.1_exomes_non_neuro_ASJ_nhomalt",
              "gnomAD2.1.1_exomes_non_neuro_EAS_AC",
              "gnomAD2.1.1_exomes_non_neuro_EAS_AN",
              "gnomAD2.1.1_exomes_non_neuro_EAS_AF",
              "gnomAD2.1.1_exomes_non_neuro_EAS_nhomalt",
              "gnomAD2.1.1_exomes_non_neuro_FIN_AC",
              "gnomAD2.1.1_exomes_non_neuro_FIN_AN",
              "gnomAD2.1.1_exomes_non_neuro_FIN_AF",
              "gnomAD2.1.1_exomes_non_neuro_FIN_nhomalt",
              "gnomAD2.1.1_exomes_non_neuro_NFE_AC",
              "gnomAD2.1.1_exomes_non_neuro_NFE_AN",
              "gnomAD2.1.1_exomes_non_neuro_NFE_AF",
              "gnomAD2.1.1_exomes_non_neuro_NFE_nhomalt",
              "gnomAD2.1.1_exomes_non_neuro_SAS_AC",
              "gnomAD2.1.1_exomes_non_neuro_SAS_AN",
              "gnomAD2.1.1_exomes_non_neuro_SAS_AF",
              "gnomAD2.1.1_exomes_non_neuro_SAS_nhomalt",
              "gnomAD2.1.1_exomes_non_neuro_POPMAX_AC",
              "gnomAD2.1.1_exomes_non_neuro_POPMAX_AN",
              "gnomAD2.1.1_exomes_non_neuro_POPMAX_AF",
              "gnomAD2.1.1_exomes_non_neuro_POPMAX_nhomalt",
              "gnomAD2.1.1_exomes_non_cancer_AFR_AC",
              "gnomAD2.1.1_exomes_non_cancer_AFR_AN",
              "gnomAD2.1.1_exomes_non_cancer_AFR_AF",
              "gnomAD2.1.1_exomes_non_cancer_AFR_nhomalt",
              "gnomAD2.1.1_exomes_non_cancer_AMR_AC",
              "gnomAD2.1.1_exomes_non_cancer_AMR_AN",
              "gnomAD2.1.1_exomes_non_cancer_AMR_AF",
              "gnomAD2.1.1_exomes_non_cancer_AMR_nhomalt",
              "gnomAD2.1.1_exomes_non_cancer_ASJ_AC",
              "gnomAD2.1.1_exomes_non_cancer_ASJ_AN",
              "gnomAD2.1.1_exomes_non_cancer_ASJ_AF",
              "gnomAD2.1.1_exomes_non_cancer_ASJ_nhomalt",
              "gnomAD2.1.1_exomes_non_cancer_EAS_AC",
              "gnomAD2.1.1_exomes_non_cancer_EAS_AN",
              "gnomAD2.1.1_exomes_non_cancer_EAS_AF",
              "gnomAD2.1.1_exomes_non_cancer_EAS_nhomalt",
              "gnomAD2.1.1_exomes_non_cancer_FIN_AC",
              "gnomAD2.1.1_exomes_non_cancer_FIN_AN",
              "gnomAD2.1.1_exomes_non_cancer_FIN_AF",
              "gnomAD2.1.1_exomes_non_cancer_FIN_nhomalt",
              "gnomAD2.1.1_exomes_non_cancer_NFE_AC",
              "gnomAD2.1.1_exomes_non_cancer_NFE_AN",
              "gnomAD2.1.1_exomes_non_cancer_NFE_AF",
              "gnomAD2.1.1_exomes_non_cancer_NFE_nhomalt",
              "gnomAD2.1.1_exomes_non_cancer_SAS_AC",
              "gnomAD2.1.1_exomes_non_cancer_SAS_AN",
              "gnomAD2.1.1_exomes_non_cancer_SAS_AF",
              "gnomAD2.1.1_exomes_non_cancer_SAS_nhomalt",
              "gnomAD2.1.1_exomes_non_cancer_POPMAX_AC",
              "gnomAD2.1.1_exomes_non_cancer_POPMAX_AN",
              "gnomAD2.1.1_exomes_non_cancer_POPMAX_AF",
              "gnomAD2.1.1_exomes_non_cancer_POPMAX_nhomalt",
              "gnomAD4.1_joint_flag",
              "gnomAD4.1_joint_AC",
              "gnomAD4.1_joint_AN",
              "gnomAD4.1_joint_AF",
              "gnomAD4.1_joint_nhomalt",
              "gnomAD4.1_joint_POPMAX_AC",
              "gnomAD4.1_joint_POPMAX_AN",
              "gnomAD4.1_joint_POPMAX_AF",
              "gnomAD4.1_joint_POPMAX_nhomalt",
              "gnomAD4.1_joint_AFR_AC",
              "gnomAD4.1_joint_AFR_AN",
              "gnomAD4.1_joint_AFR_AF",
              "gnomAD4.1_joint_AFR_nhomalt",
              "gnomAD4.1_joint_AMI_AC",
              "gnomAD4.1_joint_AMI_AN",
              "gnomAD4.1_joint_AMI_AF",
              "gnomAD4.1_joint_AMI_nhomalt",
              "gnomAD4.1_joint_AMR_AC",
              "gnomAD4.1_joint_AMR_AN",
              "gnomAD4.1_joint_AMR_AF",
              "gnomAD4.1_joint_AMR_nhomalt",
              "gnomAD4.1_joint_ASJ_AC",
              "gnomAD4.1_joint_ASJ_AN",
              "gnomAD4.1_joint_ASJ_AF",
              "gnomAD4.1_joint_ASJ_nhomalt",
              "gnomAD4.1_joint_EAS_AC",
              "gnomAD4.1_joint_EAS_AN",
              "gnomAD4.1_joint_EAS_AF",
              "gnomAD4.1_joint_EAS_nhomalt",
              "gnomAD4.1_joint_FIN_AC",
              "gnomAD4.1_joint_FIN_AN",
              "gnomAD4.1_joint_FIN_AF",
              "gnomAD4.1_joint_FIN_nhomalt",
              "gnomAD4.1_joint_MID_AC",
              "gnomAD4.1_joint_MID_AN",
              "gnomAD4.1_joint_MID_AF",
              "gnomAD4.1_joint_MID_nhomalt",
              "gnomAD4.1_joint_NFE_AC",
              "gnomAD4.1_joint_NFE_AN",
              "gnomAD4.1_joint_NFE_AF",
              "gnomAD4.1_joint_NFE_nhomalt",
              "gnomAD4.1_joint_SAS_AC",
              "gnomAD4.1_joint_SAS_AN",
              "gnomAD4.1_joint_SAS_AF",
              "gnomAD4.1_joint_SAS_nhomalt",
              "ALFA_European_AC",
              "ALFA_European_AN",
              "ALFA_European_AF",
              "ALFA_African_Others_AC",
              "ALFA_African_Others_AN",
              "ALFA_African_Others_AF",
              "ALFA_East_Asian_AC",
              "ALFA_East_Asian_AN",
              "ALFA_East_Asian_AF",
              "ALFA_African_American_AC",
              "ALFA_African_American_AN",
              "ALFA_African_American_AF",
              "ALFA_Latin_American_1_AC",
              "ALFA_Latin_American_1_AN",
              "ALFA_Latin_American_1_AF",
              "ALFA_Latin_American_2_AC",
              "ALFA_Latin_American_2_AN",
              "ALFA_Latin_American_2_AF",
              "ALFA_Other_Asian_AC",
              "ALFA_Other_Asian_AN",
              "ALFA_Other_Asian_AF",
              "ALFA_South_Asian_AC",
              "ALFA_South_Asian_AN",
              "ALFA_South_Asian_AF",
              "ALFA_Other_AC",
              "ALFA_Other_AN",
              "ALFA_Other_AF",
              "ALFA_African_AC",
              "ALFA_African_AN",
              "ALFA_African_AF",
              "ALFA_Asian_AC",
              "ALFA_Asian_AN",
              "ALFA_Asian_AF",
              "ALFA_Total_AC",
              "ALFA_Total_AN",
              "ALFA_Total_AF",
              "dbNSFP_POPMAX_AF",
              "dbNSFP_POPMAX_AC",
              "dbNSFP_POPMAX_POP",
              #"Gene_name",
              #"Ensembl_gene",
              #"chr",
              #"Gene_old_names",
              #"Gene_other_names",
              #"Uniprot_acc(HGNC/Uniprot)",
              #"Uniprot_id(HGNC/Uniprot)",
              #"Entrez_gene_id",
              #"CCDS_id",
              #"Refseq_id",
              #"ucsc_id",
              #"MIM_id",
              #"OMIM_id",
              #"Gene_full_name",
              "Pathway(Uniprot)",
              "Pathway(BioCarta)_short",
              "Pathway(BioCarta)_full",
              "Pathway(ConsensusPathDB)",
              "Pathway(KEGG)_id",
              "Pathway(KEGG)_full",
              "Function_description",
              "Disease_description",
              "MIM_phenotype_id",
              "MIM_disease",
              "Orphanet_disorder_id",
              "Orphanet_disorder",
              "Orphanet_association_type",
              "GenCC_id",
              "GenCC_disease_title",
              "GenCC_impact_class",
              "GenCC_model_of_inheritance",
              "GenCC_pmid",
              "Trait_association(GWAS)",
              "MGI_mouse_gene",
              "MGI_mouse_phenotype",
              "ZFIN_zebrafish_gene",
              "ZFIN_zebrafish_structure",
              "ZFIN_zebrafish_phenotype_quality",
              "ZFIN_zebrafish_phenotype_tag",
              "HPO_id",
              "HPO_name",
              "GO_biological_process",
              "GO_cellular_component",
              "GO_molecular_function",
              "P(HI)",
              "HIPred_score",
              "HIPred",
              "GHIS",
              "ClinGen_Haploinsufficiency_Score",
              "ClinGen_Haploinsufficiency_Description",
              "ClinGen_Haploinsufficiency_PMID",
              "ClinGen_Haploinsufficiency_Disease",
              "P(rec)",
              "Known_rec_info",
              "RVIS_EVS",
              "RVIS_percentile_EVS",
              "LoF-FDR_ExAC",
              "RVIS_ExAC",
              "RVIS_percentile_ExAC",
              "ExAC_pLI",
              "ExAC_pRec",
              "ExAC_pNull",
              "ExAC_nonTCGA_pLI",
              "ExAC_nonTCGA_pRec",
              "ExAC_nonTCGA_pNull",
              "ExAC_nonpsych_pLI",
              "ExAC_nonpsych_pRec",
              "ExAC_nonpsych_pNull",
              "gnomAD_pLI",
              "gnomAD_pRec",
              "gnomAD_pNull",
              "ExAC_del.score",
              "ExAC_dup.score",
              "ExAC_cnv.score",
              "ExAC_cnv_flag",
              "GDI",
              "GDI-Phred",
              "Gene damage prediction (all disease-causing genes)",
              "Gene damage prediction (all Mendelian disease-causing genes)",
              "Gene damage prediction (Mendelian AD disease-causing genes)",
              "Gene damage prediction (Mendelian AR disease-causing genes)",
              "Gene damage prediction (all PID disease-causing genes)",
              "Gene damage prediction (PID AD disease-causing genes)",
              "Gene damage prediction (PID AR disease-causing genes)",
              "Gene damage prediction (all cancer disease-causing genes)",
              "Gene damage prediction (cancer recessive disease-causing genes)",
              "Gene damage prediction (cancer dominant disease-causing genes)",
              "LoFtool_score",
              "Essential_gene",
              "Essential_gene_CRISPR",
              "Essential_gene_CRISPR2",
              "Essential_gene_gene-trap",
              "Gene_indispensability_score",
              "Gene_indispensability_pred",
              "Tissue_specificity(Uniprot)",
              "HPA_consensus_adipose_tissue",
              "HPA_consensus_adrenal_gland",
              "HPA_consensus_amygdala",
              "HPA_consensus_appendix",
              "HPA_consensus_basal_ganglia",
              "HPA_consensus_bone_marrow",
              "HPA_consensus_breast",
              "HPA_consensus_cerebellum",
              "HPA_consensus_cerebral_cortex",
              "HPA_consensus_cervix",
              "HPA_consensus_choroid_plexus",
              "HPA_consensus_colon",
              "HPA_consensus_duodenum",
              "HPA_consensus_endometrium",
              "HPA_consensus_epididymis",
              "HPA_consensus_esophagus",
              "HPA_consensus_fallopian_tube",
              "HPA_consensus_gallbladder",
              "HPA_consensus_heart_muscle",
              "HPA_consensus_hippocampal_formation",
              "HPA_consensus_hypothalamus",
              "HPA_consensus_kidney",
              "HPA_consensus_liver",
              "HPA_consensus_lung",
              "HPA_consensus_lymph_node",
              "HPA_consensus_midbrain",
              "HPA_consensus_ovary",
              "HPA_consensus_pancreas",
              "HPA_consensus_parathyroid_gland",
              "HPA_consensus_pituitary_gland",
              "HPA_consensus_placenta",
              "HPA_consensus_prostate",
              "HPA_consensus_rectum",
              "HPA_consensus_retina",
              "HPA_consensus_salivary_gland",
              "HPA_consensus_seminal_vesicle",
              "HPA_consensus_skeletal_muscle",
              "HPA_consensus_skin",
              "HPA_consensus_small_intestine",
              "HPA_consensus_smooth_muscle",
              "HPA_consensus_spinal_cord",
              "HPA_consensus_spleen",
              "HPA_consensus_stomach",
              "HPA_consensus_testis",
              "HPA_consensus_thymus",
              "HPA_consensus_thyroid_gland",
              "HPA_consensus_tongue",
              "HPA_consensus_tonsil",
              "HPA_consensus_urinary_bladder",
              "HPA_consensus_vagina",
              "HPA_consensus_highly_expressed",
          ],
        },
        {
          "name" => "dbNSFP_transcript_match",
          "label" => "Transcript match",
          "helptip" => "By default, some dbNSFP fields contain values for all Ensembl transcripts. Select this to only return values for the matched Ensembl transcript.",
          "value" => "transcript_match=1",
          "type" => "checkbox",
          "style" => "height:150px"
        }
      ]
    },

    # AlphaMissense
    {
      "key" => "AlphaMissense",
      "label" => "AlphaMissense",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/AlphaMissense.pm",
      "helptip" => "Annotates missense variants with the pre-computed AlphaMissense pathogenicity scores. AlphaMissense is a deep learning model developed by Google DeepMind that predicts the pathogenicity of single nucleotide missense variants.",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        #"file=/path/to/AlphaMissense_hg38.tsv.gz"
      ]
    },

    # AVADA
    {
      "key" => "AVADA",
      "label" => "AVADA",
      "available" => 0,
      "enabled" => 0,
      "section" => "Phenotype data and citations",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/AVADA.pm",
    },

    # CADD
    # https://github.com/ensembl-variation/VEP_plugins/blob/main/CADD.pm
    {
      "key" => "CADD",
      "label" => "CADD",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "helptip" => "Combined Annotation Dependent Depletion (CADD) is a tool for scoring the deleteriousness of single nucleotide variants and insertion/deletion variants in the human genome. CADD integrates multiple annotations into one metric by contrasting variants that survived natural selection with simulated mutations. CADD is only available here for non-commercial use. See CADD website for more information.",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/CADD.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens",
        "sus_scrofa"
      ],
      "form" => [
        {
          "name" => "file_type",
          "label" => "Select annotation file",
          "type" => "dropdown",
          "helptip" => "Select type of CADD annotation file to be used. Caution to be taken while using snv, indels or snv_indels options with structural variants as input. It can match unnecessary huge amount of lines in annotation file and in such cases no CADD annotation will be made.",
          "values" => [
            { "value" => "snv_indels", "caption" => "CADD SNVs and InDels annotation file", "class" => "_stt_Homo_sapiens" },
            { "value" => "snv", "caption" => "CADD SNVs annotation file" },
            { "value" => "indels", "caption" => "CADD InDels annotation file", "class" => "_stt_Homo_sapiens" },
            { "value" => "sv", "caption" => "CADD-SV annotation file (supported only in GRCh38)", "class" => "_stt_Homo_sapiens" }
          ],
          "value" => "snv_indels",
        },
      ],
      "params" => [
        #"snv=/path/to/CADD_whole_genome_SNVs.tsv.gz",
        #"indels=/path/to/CADD_GRCh38_1.6_InDels.tsv.gz",
        #"snv_pig=/path/to/ALL_pCADD-PHRED-scores.tsv.gz",
        #"sv=/path/to/CADD_prescored_variants.tsv.gz"
      ]
    },

    # CAPICE
    # https://github.com/ensembl-variation/VEP_plugins/blob/main/CAPICE.pm
    # Requires tabix-indexed data files as params (one for InDels, another for SNVs)
    # No other parameters so no form required
    # data file currently only available for GRCh37
    {
      "key" => "CAPICE",
      "label" => "CAPICE",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "helptip" => "Consequence-Agnostic Pathogenicity Interpretation of Clinical Exome variations (CAPICE) is a tool for scoring the pathogenicity of single nucleotide variants and insertion/deletion variants in the human genome. CAPICE uses a gradient boosting tree model trained with multiple genomic annotations used by CADD score and based on clinical significance.",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/CAPICE.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        #"/path/to/capice_v1.0_build37_indels.tsv.gz",
        #"/path/to/capice_v1.0_build37_snvs.tsv.gz"
      ]
    },

    # FATHMM
    {
      "key" => "FATHMM",
      "label" => "FATHMM",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/FATHMM.pm"
    },

    # FATHMM-MKL
    # https://github.com/ensembl-variation/VEP_plugins/blob/main/FATHMM_MKL.pm
    # Requires tabix-indexed data file as first param
    # No other parameters so no form required
    # data file currently only available for GRCh37
    {
      "key" => "FATHMM_MKL",
      "label" => "FATHMM-MKL",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "helptip" => "FATHMM-MKL predicts functional consequences of variants, both coding and non-coding.",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/FATHMM_MKL.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        #"/path/to/fathmm-MKL_Current.tab.gz"
      ]
    },

    # GWAVA
    # https://www.sanger.ac.uk/sanger/StatGen_Gwava
    # Requires tabix-indexed BED data file from ftp://ftp.sanger.ac.uk/pub/resources/software/gwava/v1.0/VEP_plugin/
    # data file currently only available for GRCh37
    {
      "key" => "Gwava",
      "label" => "GWAVA",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "helptip" => "Retrieves precomputed Genome Wide Annotation of VAriants (GWAVA) scores for any  variant that overlaps a known variant from the Ensembl variation database",
      "plugin_url" => "ftp://ftp.sanger.ac.uk/pub/resources/software/gwava/v1.0/VEP_plugin/Gwava.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        "@*",
        # "/path/to/gwava_scores.bed.gz"
      ],
      "form" => [
        {
          "name" => "model",
          "label" => "Model",
          "type" => "dropdown",
          "values" => [
            { "value" => "region",    "caption" => "Region" },
            { "value" => "tss",       "caption" => "TSS" },
            { "value" => "unmatched", "caption" => "Unmatched" }
          ],
          "value" => "region",
        },
      ],
    },

    # Carol
    # https://github.com/ensembl-variation/VEP_plugins/blob/main/Carol.pm
    # Requires Math/CDF Perl module
    {
      "key" => "Carol",
      "helptip" => "Calculates the Combined Annotation scoRing toOL (CAROL) score for a missense mutation based on the pre-calculated SIFT and PolyPhen scores",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Carol.pm",
      "requires_install" => 1,
      "species" => [
        "homo_sapiens"
      ],
    },

    # Condel
    # https://github.com/ensembl-variation/VEP_plugins/blob/main/Condel.pm
    # Requires path to config directory as first param
    # config directory is checked out as part of VEP_plugins repo, as /[path]/VEP_plugins/config/Condel/config
    # Within that dir, edit condel_SP.conf so that condel.dir points to /[path]/VEP_plugins/config/Condel
    {
      "key" => "Condel",
      "helptip" => "Calculates the Consensus Deleteriousness (Condel) score for a missense mutation based on the pre-calculated SIFT and PolyPhen scores",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Condel.pm",
      "requires_install" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        # "/path/to/config/Condel/config",
        "@*"
      ],
      "form" => [
        {
          "name" => "score_pred",
          "label" => "Score/prediction",
          "type" => "dropdown",
          "values" => [
            { "value" => "b", "caption" => "Prediction and score" },
            { "value" => "p", "caption" => "Prediction only" },
            { "value" => "s", "caption" => "Score only" }
          ],
          "value" => "b",
        },
      ],
    },

    # LOFTEE
    # See https://github.com/konradjk/loftee for details
    {
      "key" => "LoF",
      "helptip" => "LOFTEE identifies LoF (loss-of-function) variation",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/konradjk/loftee/master/LoF.pm",
      "requires_data" => 1,
      "requires_install" => 1,
      "params" => [
        "@*"
      ]
    },

    # LoFtool
    # Requires LoFtool_scores.txt file as first param (available in VEP_plugins GitHub repo)
    {
      "key" => "LoFtool",
      "helptip" => "Provides a per-gene rank of genic intolerance and consequent susceptibility to disease based on the ratio of Loss-of-function (LoF) to synonymous mutations in ExAC data",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/LoFtool.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        # "/path/to/LoFtool_scores.txt"
      ]
    },

    # MPC
    # Requires fordist_constraint_official_mpc_values.txt.gz data file
    {
      "key" => "MPC",
      "helptip" => "MPC is a missense deleteriousness metric based on the analysis of genic regions depleted of missense mutations in ExAC",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/MPC.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        # "/path/to/fordist_constraint_official_mpc_values.txt.gz"
      ]
    },

    # MTR
    # Requires mtrflatfile_1.0.txt.gz data file from ftp://mtr-viewer.mdhs.unimelb.edu.au/pub
    {
      "key" => "MTR",
      "helptip" => "MTR scores quantify the amount of purifying selection acting specifically on missense variants in a given window of protein-coding sequence",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/MTR.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        # "/path/to/mtrflatfile_1.0.txt.gz"
      ]
    },

    # PrimateAI
    # Requires PrimateAI_scores_v0.2.tsv.gz or PrimateAI_scores_v0.2_hg38.tsv.gz from https://basespace.illumina.com/s/yYGFdGih1rXL.
    {
      "key" => "PrimateAI",
      "helptip" => "PrimateAI scores can be used to assess pathogenicity of variants in humans",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/PrimateAI.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        # "/path/to/PrimateAI_scores_v0.2_GRCh38_sorted.tsv.bgz
      ]
    },

    # REVEL
    # Requires data file processed from revel_all_chromosomes.csv.zip
    {
      "key" => "REVEL",
      "helptip" => "An ensemble method for predicting the pathogenicity of rare missense variants",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/REVEL.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        # "/path/to/revel_all_chromosomes.tsv.gz"
      ]
    },

    # PON_P2
    {
      "key" => "PON_P2",
      "label" => "PON_P2",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/PON_P2.pm"
    },

    # ClinPred
    # Requires data file processed from ClinPred.txt.gz
    {
      "key" => "ClinPred",
      "helptip" => "A prediction tool for the identification of disease-relevant nonsynonymous single nucleotide variants",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/ClinPred.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        # "/path/to/ClinPred_tabbed.tsv.gz"
      ]
    },

    # EVE
    # https://github.com/ensembl-variation/VEP_plugins/blob/main/EVE.pm
    # Requires tabix-indexed data file as params
    # No other parameters so no form required
    # data file currently only available for GRCh38
    # We only report EVE scores for input variants and
    # don't consider adjacent variants.
    {
      "key" => "EVE",
      "label" => "EVE",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "helptip" => "EVE (evolutionary model of variant effect) is a computational method for the classification of human genetic variants trained solely on evolutionary sequences.",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/EVE.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        #"/path/to/eve_merged.vcf.gz"
      ]
    },

    # Paralogues
    {
      "key" => "Paralogues",
      "label" => "Paralogue variants",
      "available" => 0,
      "enabled" => 0,
      "section" => "Variant data",
      "helptip" => "Retrieves ClinVar variants that overlap genomic coordinates corresponding to aligned amino acid positions in paralogous proteins",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Paralogues.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        #"matches=/path/to/paralogues_matches.tsv.gz",
        "@*"
      ],
      "form" => [
        {
          "name" => "clnsig",
          "label" => "Clinical significance",
          "helptip" => "Clinical significance term used to filter paralogue variants",
          "type" => "dropdown",
          "values" => [
            { "value" => "clnsig=pathogenic",             "caption" => "Pathogenic" },
            { "value" => "clnsig=benign",                 "caption" => "Benign" },
            { "value" => "clnsig=uncertain_significance", "caption" => "Uncertain significance" },
            { "value" => "clnsig=ignore",                 "caption" => "Ignore (fetch all paralogue variants)" }
          ],
          "value" => "clnsig=pathogenic"
        },
        {
          "name" => "clnsig_match",
          "label" => "Clinical significance match type",
          "helptip" => "Type of match when filtering paralogue variants based on clinical significance (e.g., using 'Pathogenic' and 'Partial match' will fetch variants that are pathogenic and likely pathogenic, whereas 'Exact match' will only fetch pathogenic variants)",
          "type" => "dropdown",
          "values" => [
            { "value" => "clnsig_match=partial", "caption" => "Partial match" },
            { "value" => "clnsig_match=exact",   "caption" => "Exact match" }
          ],
          "value" => "clnsig_match=partial"
        }
      ]
    },

    # BayesDel
    {
      "key" => "BayesDel",
      "label" => "BayesDel",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "helptip" => "BayesDel adds a deleteriousness meta-score combining multiple deleteriousness predictors.",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/BayesDel.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        #"/path/to/BayesDel.vcf.gz"
      ]
    },

    # PolyPhen_SIFT
    {
      "key" => "PolyPhen_SIFT",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/PolyPhen_SIFT.pm",
    },

    ## SPLICING PREDICTIONS
    #######################

    # dbscSNV
    {
      "key" => "dbscSNV",
      "label" => "dbscSNV",
      "available" => 0,
      "enabled" => 0,
      "section" => "Splicing predictions",
      "helptip" => "Retrieves data for splicing variants from a tabix-indexed dbscSNV file",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/dbscSNV.pm",
      "requires_data" => 1,
      "requires_install" => 1,
      "params"  => [
        #"/path/to/dbscSNV1.1.txt.gz"
      ],
      "species" => [
        "homo_sapiens"
      ],
    },

    # GeneSplicer
    {
      "key" => "GeneSplicer",
      "label" => "GeneSplicer",
      "helptip" => "Detects splice sites in genomic DNA",
      "available" => 0,
      "enabled" => 0,
      "section" => "Splicing predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/GeneSplicer.pm",
      "requires_install" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        #"/path/to/genesplicer/bin/linux/genesplicer",
        #"/path/to/genesplicer/human",
        "@*"
      ]
    },

    # MaxEntScan
    {
      "key" => "MaxEntScan",
      "label" => "MaxEntScan",
      "helptip" => "Sequence motif and maximum entropy based splice site consensus predictions",
      "available" => 0,
      "enabled" => 0,
      "section" => "Splicing predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/MaxEntScan.pm",
      "requires_install" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        #"/path/to/maxentscan"
      ]
    },

    # SpliceRegion
    {
      "key" => "SpliceRegion",
      "label" => "SpliceRegion",
      "helptip" => "More granular predictions of splicing effects",
      "available" => 0,
      "enabled" => 0,
      "section" => "Splicing predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/SpliceRegion.pm",
    },

    # SpliceAI
    {
      "key" => "SpliceAI",
      "label" => "SpliceAI",
      "helptip" => "Pre-calculated annotations from SpliceAI a deep neural network, developed by Illumina, Inc that predicts splice junctions from an arbitrary pre-mRNA transcript sequence. Used for non-commercial purposes (https://github.com/Illumina/SpliceAI)",
      "available" => 0,
      "enabled" => 0,
      "section" => "Splicing predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/SpliceAI.pm",
      "species" => [
        "homo_sapiens"
      ],
      "form" => [
        {
          "name" => "file_type",
          "label" => "Select analysis mode",
          "type" => "dropdown",
          "values" => [
            { "value" => "snv", "caption" => "Masked scores (Ensembl/GENCODE v24 canonical transcripts)" },
            { "value" => "snv_ensembl", "caption" => "Raw scores (Ensembl/GENCODE v37 MANE transcripts, SNV only)" }
          ],
          "value" => "snv",
        },
      ],
    },

    # SpliceVault
    {
      "key" => "SpliceVault",
      "label" => "SpliceVault",
      "helptip" => "Retrieves the most common variant-associated mis-splicing events for variants that overlap a near-splice-site region",
      "available" => 0,
      "enabled" => 0,
      "section" => "Splicing predictions",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/SpliceVault.pm",
    },


    ## CONSERVATION
    ###############

    # Blosum62
    {
      "key" => "Blosum62",
      "label" => "BLOSUM62",
      "helptip" => "BLOSUM62 amino acid conservation score",
      "available" => 0,
      "enabled" => 0,
      "section" => "Conservation",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Blosum62.pm",
    },

    # Conservation
    # Use the following query to get valid species sets:
    #
    # SELECT group_concat(concat("_stt_", gd.name) SEPARATOR ' '), REPLACE(mlss.name, "Gerp Conservation Scores ", ""), sst.value
    #   FROM method_link ml,
    #     method_link_species_set mlss,
    #     genome_db gd, species_set ss, species_set_tag sst
    #   WHERE mlss.method_link_id = ml.method_link_id AND
    #     mlss.species_set_id = ss.species_set_id AND
    #     ss.genome_db_id = gd.genome_db_id AND
    #     ss.species_set_id = sst.species_set_id AND
    #     (ml.class = "ConservationScore.conservation_score")
    #   GROUP BY mlss.species_set_id
    {
      "key" => "Conservation",
      "helptip" => "Retrieves a conservation score from the Ensembl Compara databases for variant positions",
      "available" => 0,
      "enabled" => 0,
      "section" => "Conservation",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Conservation.pm",
      "params" => [
        "@*"
      ],
      "form" => [
        {
          "name" => "method_link_type",
          "label" => "Method",
          "type" => "dropdown",
          "values" => [
            { "value" => "GERP_CONSERVATION_SCORE", "caption" => "GERP"}
          ]
        },
        {
          "name" => "species_set",
          "label" => "Species set",
          "type" => "dropdown",
          "values" => [
            { "value" => "mammals",    "caption" => "39 eutherian mammals"   }, #"class" => "_stt_macaca_mulatta _stt_echinops_telfairi _stt_tupaia_belangeri _stt_erinaceus_europaeus _stt_sorex_araneus _stt_microcebus_murinus _stt_pongo_abelii _stt_equus_caballus _stt_ochotona_princeps _stt_cavia_porcellus _stt_choloepus_hoffmanni _stt_procavia_capensis _stt_tursiops_truncatus _stt_tarsius_syrichta _stt_dipodomys_ordii _stt_vicugna_pacos _stt_pteropus_vampyrus _stt_loxodonta_africana _stt_oryctolagus_cuniculus _stt_ailuropoda_melanoleuca _stt_nomascus_leucogenys _stt_callithrix_jacchus _stt_myotis_lucifugus _stt_bos_taurus _stt_gorilla_gorilla _stt_otolemur_garnettii _stt_pan_troglodytes _stt_ictidomys_tridecemlineatus _stt_sus_scrofa _stt_mus_musculus _stt_canis_familiaris _stt_mustela_putorius_furo _stt_felis_catus _stt_ovis_aries _stt_dasypus_novemcinctus _stt_homo_sapiens _stt_papio_anubis _stt_chlorocebus_sabaeus _stt_rattus_norvegicus" },
            { "value" => "amniotes",   "caption" => "23 amniota vertebrates" }, #"class" => "_stt_macaca_mulatta _stt_ornithorhynchus_anatinus _stt_monodelphis_domestica _stt_pongo_abelii _stt_equus_caballus _stt_taeniopygia_guttata _stt_oryctolagus_cuniculus _stt_anolis_carolinensis _stt_meleagris_gallopavo _stt_callithrix_jacchus _stt_bos_taurus _stt_gorilla_gorilla _stt_pan_troglodytes _stt_sus_scrofa _stt_mus_musculus _stt_canis_familiaris _stt_felis_catus _stt_gallus_gallus _stt_ovis_aries _stt_homo_sapiens _stt_papio_anubis _stt_chlorocebus_sabaeus _stt_rattus_norvegicus" },
            { "value" => "sauropsids", "caption" => "7 sauropsids"           }, #"class" => "_stt_taeniopygia_guttata _stt_anolis_carolinensis _stt_meleagris_gallopavo _stt_pelodiscus_sinensis _stt_gallus_gallus _stt_anas_platyrhynchos _stt_ficedula_albicollis" },
            { "value" => "fish",       "caption" => "11 fish"                }, #"class" => "_stt_takifugu_rubripes _stt_gasterosteus_aculeatus _stt_oryzias_latipes _stt_tetraodon_nigroviridis _stt_gadus_morhua _stt_oreochromis_niloticus _stt_xiphophorus_maculatus _stt_astyanax_mexicanus _stt_lepisosteus_oculatus _stt_poecilia_formosa _stt_danio_rerio" },
          ]
        },
      ]
    },

    # AncestralAllele
    # Requires processed FASTA file from https://ftp.ensembl.org/pub/current_fasta/ancestral_alleles/
    {
      "key" => "AncestralAllele",
      "label" => "Ancestral allele",
      "helptip" => "Retrieves the ancestral allele for variants inferred from the Ensembl Compara Enredo-Pecan-Ortheus (EPO) pipeline",
      "available" => 0,
      "enabled" => 0,
      "section" => "Conservation",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/AncestralAllele.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        # "/path/to/homo_sapiens_ancestor_GRCh38_e93.fa.gz"
      ]
    },



    ## FREQUENCY DATA
    #################

    # gnomADc
    {
      "key" => "gnomADc",
      "label" => "gnomADc",
      "helptip" => "Reports coverage data from the gmomAD coverage files",
      "available" => 0,
      "enabled" => 0,
      "section" => "Frequency data",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/gnomADc.pm",
      "requires_data" => 1,
       "species" => [
        "homo_sapiens"
      ]
    },



    ## PHENOTYPES DATA AND CITATIONS
    ##################

    # Phenotypes
    {
      "key" => "Phenotypes",
      "label" => "Phenotypes",
      "helptip" => "Retrieves overlapping phenotype annotations",
      "section" => "Phenotype data and citations",
      "requires_data" => 1,
      "available" => 0,
      "enabled" => 0,
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Phenotypes.pm",
      "params" => [
        #"/path/to/Phenotypes_data_files/phenotypes_dir_with_dumps_for_all_species.gvf.gz"
      ]
    },

    # GO
    {
      "key" => "GO",
      "label" => "Gene Ontology",
      "helptip" => "Retrieves Gene Ontology terms associated with transcripts/translations",
      "available" => 0,
      "enabled" => 0,
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/GO.pm",
      "section" => "Phenotype data and citations",
      "params" => [
        #"/path/to/GO_data_dir"
      ]
    },

    # G2P
    {
      "key" => "G2P",
      "label" => "G2P",
      "helptip" => "Assesses variants using G2P allelic requirements for potential phenotype involvement.",
      "available" => 0,
      "enabled" => 0,
      "requires_data" => 1,
      "section" => "Phenotype data and citations",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/G2P.pm",
    },

    # Geno2MP
    # https://github.com/ensembl-variation/VEP_plugins/blob/main/Geno2MP.pm
    # Requires tabix-indexed VCF data file
    {
      "key" => "Geno2MP",
      "label" => "Geno2MP",
      "helptip" => "Geno2MP is a web-accessible database of rare variant genotypes linked to individual-level phenotypic profiles defined by human phenotype ontology (HPO) terms",
      "available" => 0,
      "enabled" => 0,
      "requires_data" => 1,
      "section" => "Phenotype data and citations",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Geno2MP.pm",
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        "#file=/path/to/Geno2MP/data.vcf.gz"
      ],
    },

    # PostGAP
    {
      "key" => "PostGAP",
      "label" => "PostGAP",
      "available" => 0,
      "enabled" => 0,
      "section" => "Phenotype data and citations",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/PostGAP.pm"
    },

    # satMutMPRA
    {
      "key" => "satMutMPRA",
      "helptip" => "Reports saturation mutagenesis MPRA measures of variant effects on gene RNA expression for 21 enhancers/promoters",
      "section" => "Phenotype data and citations",
      "available" => 0,
      "enabled" => 0,
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/satMutMPRA.pm",
    },

    # Mastermind
    {
      "key" => "Mastermind",
      "label" => "Mastermind",
      "helptip" => "Variants with clinical evidence cited in the medical literature reported by Mastermind Genomic Search Engine (https://www.genomenon.com/mastermind)",
      "available" => 0,
      "enabled" => 0,
      "species" => [
        "homo_sapiens"
      ],
      "section" => "Phenotype data and citations",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Mastermind.pm"
    },

    # GWAS
    {
      "key" => "GWAS",
      "label" => "GWAS",
      "helptip" => "Genome-wide associated study data from the NHGRI-EBI GWAS Catalog (https://www.ebi.ac.uk/gwas/)",
      "available" => 0,
      "enabled" => 0,
      "species" => [
        "homo_sapiens"
      ],
      "section" => "Phenotype data and citations",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/GWAS.pm"
    },

    # PhenotypeOrthologous
    {
      "key" => "PhenotypeOrthologous",
      "label" => "PhenotypeOrthologous",
      "helptip" => "Phenotypes associated with orthologous genes in model organisms (mouse and rat)",
      "requires_data" => 1,
      "available" => 0,
      "enabled" => 0,
      "species" => [
        "homo_sapiens"
      ],
      "section" => "Phenotype data and citations",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/PhenotypeOrthologous.pm"
    },



    ## VARIANT DATA
    ###############

    # DeNovo
    {
      "key" => "DeNovo",
      "helptip" => "Identifies de novo variants in a VCF file",
      "available" => 0,
      "enabled" => 0,
      "section" => "Variant data",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/DeNovo.pm",
    },

    # Open Targets Genetics
    {
      "key" => "OpenTargets",
      "label" => "Open Targets Genetics",
      "helptip" => "Returns locus-to-gene (L2G) scores to predict causal genes at GWAS loci from Open Targets Genetics",
      "enabled" => 0,
      "available" => 0,
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/OpenTargets.pm",
      "section" => "Variant data",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        #"file=/path/to/OpenTargets_data.tsv.gz"
      ]
    },

    # LD
    {
      "key" => "LD",
      "label" => "Linkage disequilibrium",
      "helptip" => "Finds variants in linkage disequilibrium with any overlapping existing variants from the Ensembl variation databases",
      "available" => 0,
      "enabled" => 0,
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/LD.pm",
      "section" => "Variant data",
      "params" => [
        "@*"
      ],
      "form" => [
        {
          "name" => "population",
          "label" => "Population",
          "type" => "dropdown",
          "values" => [
            { "value" => "1000GENOMES:phase_3:ACB", "caption" => "African Caribbean in Barbados" },
            { "value" => "1000GENOMES:phase_3:ASW", "caption" => "African Ancestry in Southwest US" },
            { "value" => "1000GENOMES:phase_3:BEB", "caption" => "Bengali in Bangladesh" },
            { "value" => "1000GENOMES:phase_3:CDX", "caption" => "Chinese Dai in Xishuangbanna, China" },
            { "value" => "1000GENOMES:phase_3:CEU", "caption" => "Utah residents with Northern and Western European ancestry" },
            { "value" => "1000GENOMES:phase_3:CHB", "caption" => "Han Chinese in Bejing, China" },
            { "value" => "1000GENOMES:phase_3:CHS", "caption" => "Southern Han Chinese, China" },
            { "value" => "1000GENOMES:phase_3:CLM", "caption" => "Colombian in Medellin, Colombia" },
            { "value" => "1000GENOMES:phase_3:ESN", "caption" => "Esan in Nigeria" },
            { "value" => "1000GENOMES:phase_3:FIN", "caption" => "Finnish in Finland" },
            { "value" => "1000GENOMES:phase_3:GBR", "caption" => "British in England and Scotland" },
            { "value" => "1000GENOMES:phase_3:GIH", "caption" => "Gujarati Indian in Houston, TX" },
            { "value" => "1000GENOMES:phase_3:IBS", "caption" => "Iberian populations in Spain" },
            { "value" => "1000GENOMES:phase_3:ITU", "caption" => "Indian Telugu in the UK" },
            { "value" => "1000GENOMES:phase_3:JPT", "caption" => "Japanese in Tokyo, Japan" },
            { "value" => "1000GENOMES:phase_3:KHV", "caption" => "Kinh in Ho Chi Minh City, Vietnam" },
            { "value" => "1000GENOMES:phase_3:LWK", "caption" => "Luhya in Webuye, Kenya" },
            { "value" => "1000GENOMES:phase_3:MAG", "caption" => "Mandinka in The Gambia" },
            { "value" => "1000GENOMES:phase_3:MSL", "caption" => "Mende in Sierra Leone" },
            { "value" => "1000GENOMES:phase_3:MXL", "caption" => "Mexican Ancestry in Los Angeles, California" },
            { "value" => "1000GENOMES:phase_3:PEL", "caption" => "Peruvian in Lima, Peru" },
            { "value" => "1000GENOMES:phase_3:PJL", "caption" => "Punjabi in Lahore, Pakistan" },
            { "value" => "1000GENOMES:phase_3:PUR", "caption" => "Puerto Rican in Puerto Rico" },
            { "value" => "1000GENOMES:phase_3:STU", "caption" => "Sri Lankan Tamil in the UK" },
            { "value" => "1000GENOMES:phase_3:TSI", "caption" => "Toscani in Italy" },
            { "value" => "1000GENOMES:phase_3:YRI", "caption" => "Yoruba in Ibadan, Nigeria" },
          ],
          "value" => "1000GENOMES:phase_3:CEU",
        },
        {
          "name" => "threshold",
          "label" => "r2 cutoff",
          "type" => "string",
          "value" => 0.8,
        },
      ]
    },

    # SameCodon
    {
      "key" => "SameCodon",
      "label" => "Variants in same codon",
      "helptip" => "Reports existing variants that fall in the same codon",
      "available" => 0,
      "enabled" => 0,
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/SameCodon.pm",
      "section" => "Variant data",
    },

    # LOVD
    {
      "key" => "LOVD",
      "label" => "LOVD",
      "helptip" => "Retrieves LOVD variation data",
      "available" => 0,
      "enabled" => 0,
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/LOVD.pm",
      "section" => "Variant data",
    },

    # SubsetVCF
    {
      "key" => "SubsetVCF",
      "label" => "SubsetVCF",
      "available" => 0,
      "enabled" => 0,
      "section" => "Variant data",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/SubsetVCF.pm"
    },
    # GeneBe
    {
      "key" => "GeneBe",
      "label" => "GeneBe",
      "helptip" => "Retrieves automatic ACMG variant classification data from GeneBe",
      "available" => 0,
      "enabled" => 0,
      "section" => "Variant data",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/GeneBe.pm",
    },


    ## NEARBY FEATURES
    ##################

    # NearestGene
    {
      "key" => "NearestGene",
      "label" => "Nearest gene",
      "helptip" => "Finds the nearest gene to non-genic variants",
      "available" => 0,
      "enabled" => 0,
      "section" => "Nearby features",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/NearestGene.pm",
    },

    # NearestExonJB
    {
      "key" => "NearestExonJB",
      "label" => "NearestExonJB",
      "available" => 0,
      "enabled" => 0,
      "section" => "Nearby features",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/NearestExonJB.pm"
    },

    # Downstream
    {
      "key" => "Downstream",
      "label" => "Downstream",
      "helptip" => "Predicts the downstream effects of a frameshift variant on the protein sequence of a transcript",
      "available" => 0,
      "enabled" => 0,
      "section" => "Nearby features",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Downstream.pm",
    },

    # TSSDistance
    {
      "key" => "TSSDistance",
      "label" => "TSS distance",
      "helptip" => "Calculates the distance from the transcription start site for upstream variants   ",
      "available" => 0,
      "enabled" => 0,
      "section" => "Nearby features",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/TSSDistance.pm",
    },



    ## SEQUENCE
    ###########

    # ProteinSeqs
    {
      "key" => "ProteinSeqs",
      "label" => "Protein sequences",
      "helptip" => "Prints out the reference and mutated protein sequences of any proteins found with non-synonymous mutations",
      "available" => 0,
      "enabled" => 0,
      "section" => "Sequence",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/ProteinSeqs.pm",
    },

    # ReferenceQuality
    {
      "key" => "ReferenceQuality",
      "label" => "ReferenceQuality",
      "available" => 0,
      "enabled" => 0,
      "section" => "Sequence",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/ReferenceQuality.pm"
    },



    ## VISUALISATION
    ################

    # Draw
    {
      "key" => "Draw",
      "label" => "Draw",
      "helptip" => "Creates images of the transcript model showing variant location",
      "available" => 0,
      "enabled" => 0,
      "requires_install" => 1,
      "section" => "Visualisation",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Draw.pm",
    },



    ## LOCAL ID
    ###########

    # LocalID
    {
      "key" => "LocalID",
      "label" => "LocalID",
      "helptip" => "Allows you to use variant IDs as VEP input without making a database connection.",
      "available" => 0,
      "enabled" => 0,
      "section" => "Look up",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/LocalID.pm",
    },



    ## EXTERNAL ID
    ##############

    # FlagLRG
    {
      "key" => "FlagLRG",
      "label" => "FlagLRG",
      "available" => 0,
      "enabled" => 0,
      "section" => "External ID",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/FlagLRG.pm"
    },



    ## MOTIF
    ########

    # FunMotifs
    {
      "key" => "FunMotifs",
      "label" => "FunMotifs",
      "available" => 0,
      "enabled" => 0,
      "section" => "Motif",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/FunMotifs.pm"
    },



    ## HGVS
    #######

    # HGVSIntronOffset
    {
      "key" => "HGVSIntronOffset",
      "label" => "HGVSIntronOffset",
      "available" => 0,
      "enabled" => 0,
      "section" => "HGVS",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/HGVSIntronOffset.pm"
    },

    # SingleLetterAA
    {
      "key" => "SingleLetterAA",
      "label" => "SingleLetterAA",
      "available" => 0,
      "enabled" => 0,
      "section" => "HGVS",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/SingleLetterAA.pm"
    },



    ## STRUCTURAL VARIANT DATA
    ##########################

    # StructuralVariantOverlap
    {
      "key" => "StructuralVariantOverlap",
      "label" => "StructuralVariantOverlap",
      "available" => 0,
      "enabled" => 0,
      "section" => "Structural variant data",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/StructuralVariantOverlap.pm"
    },

    ## GENE TOLERANCE TO CHANGE
    ###########################

    # DosageSensitivity
    {
      "key" => "DosageSensitivity",
      "label" => "DosageSensitivity",
      "available" => 0,
      "enabled" => 0,
      "section" => "Gene tolerance to change",
      "helptip" => "DosageSensitivity determines the likelihood of a gene being haploinsufficient or triplosensitive",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/DosageSensitivity.pm",
      "requires_data" => 1,
      "params"  => [
        "#file=/path/to/Collins_rCNV_2022.dosage_sensitivity_scores.tsv.gz"
      ],
      "species" => [
        "homo_sapiens"
      ],
    },

    # LOEUF
    # Requires data file processed from supplementary_dataset_11_full_constraint_metrics.tsv.gz
    # Only available for GRCh37
    {
      "key" => "LOEUF",
      "helptip" => "LOEUF stands for the 'loss-of-function observed/expected upper bound fraction'. This plugin adds constraint scores derived from gnomAD to VEP",
      "available" => 0,
      "enabled" => 0,
      "section" => "Gene tolerance to change",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/LOEUF.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params"  => [
        # "/path/to/loeuf_dataset.gz",
        "@*"
      ]
    },


    # MechPredict
    {
      "key" => "MechPredict",
      "label" => "MechPredict", 
      "available" => 0,
      "enabled" => 0,
      "section" => "Gene tolerance to change",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/MechPredict.pm",
    },

    # pLI
    # Requires pLI_values.txt file as first param (available in VEP_plugins GitHub repo)
    {
      "key" => "pLI",
      "helptip" => "Provides a per-gene or per transcript probability of being loss-of-function intolerant (pLI)",
      "available" => 0,
      "enabled" => 0,
      "section" => "Gene tolerance to change",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/pLI.pm",
      "requires_data" => 1,
      "species" => [
        "homo_sapiens"
      ],
      "params" => [
        # "/path/to/pLI_values.txt"
      ]
    },

    ## TRANSCRIPT ANNOTATION
    ############

    # NMD
    {
      "key" => "NMD",
      "helptip" => "Nonsense-mediated mRNA decay escaping variants prediction",
      "available" => 0,
      "enabled" => 0,
      "section" => "Transcript annotation",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/NMD.pm"
    },

    # UTRAnnotator
    # https://github.com/ensembl-variation/VEP_plugins/blob/main/UTRAnnotator.pm
    {
      "key" => "UTRAnnotator",
      "label" => "UTRAnnotator",
      "available" => 0,
      "enabled" => 0,
      "section" => "Transcript annotation",
      "helptip" => "A VEP plugin that annotates the effect of 5' UTR variant especially for variant creating/disrupting upstream ORFs.",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/UTRAnnotator.pm"
    },

    # TranscriptAnnotator
    {
      "key" => "TranscriptAnnotator",
      "label" => "TranscriptAnnotator",
      "available" => 0,
      "enabled" => 0,
      "section" => "Transcript annotation",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/TranscriptAnnotator.pm"
    },

    # RiboseqORFs
    {
      "key" => "RiboseqORFs",
      "label" => "RiboseqORFs",
      "available" => 0,
      "enabled" => 0,
      "section" => "Transcript annotation",
      "helptip" => "A VEP plugin that calculates consequences for variants overlapping Ribo-seq ORFs",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/RiboseqORFs.pm",
      "params"  => [
        #"file=/path/to/Ribo-seq_ORFs.bed.gz"
      ],
      "species" => [
        "homo_sapiens"
      ],
    },

    ## PROTEIN DATA
    ###############

    # neXtProt
    {
      "key" => "neXtProt",
      "label" => "neXtProt",
      "helptip" => "Retrieves protein-related data from neXtProt",
      "available" => 0,
      "enabled" => 0,
      "section" => "Protein data",
      "requires_data" => 1,
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/neXtProt.pm"
    },

    ## PROTEIN ANNOTATION
    #####################

    # IntAct
    {
      "key" => "IntAct",
      "label" => "IntAct",
      "available" => 0,
      "enabled" => 0,
      "section" => "Functional effect",
      "helptip" => "IntAct provides molecular interaction data for variants as reported by IntAct database",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/IntAct.pm",
      "requires_data" => 1,
      "params"  => [
        "#mapping_file=/path/to/mutation_gc_map.txt.gz",
        "#mutation_file=/path/to/mutations.tsv",
        "@*"
      ],
      "species" => [
        "homo_sapiens",
        "mus_musculus",
        "rattus_norvegicus",
        "gallus_gallus_gca000002315v5",
        "saccharomyces_cerevisiae",
        "arabidopsis_thaliana",
        "drosophila_melanogaster"
      ],
      "form" => [
        {
          "name" => "IntAct_efields",
          "label" => "Extra fields to include",
          "helptip" => "Extra fields to show; hold down the Ctrl (Windows) / Command (Mac) button to select multiple options",
          "value" => "",
          "type" => "dropdown",
          "multiple" => 1,
          "style" => "height:150px",
          "values" => [
            { "value" => "feature_ac=1", "caption" => "Feature AC" },
            { "value" => "feature_short_label=1", "caption" => "Feature short label" },
            { "value" => "feature_annotation=1", "caption" => "Feature annotation" },
            { "value" => "ap_ac=1", "caption" => "Affected protein AC" },
            { "value" => "interaction_participants=1", "caption" => "Interaction participants" },
            { "value" => "pmid=1", "caption" => "PubMedID" },
          ],
        },
      ]
    },

    # MaveDB
    {
      "key" => "MaveDB",
      "label" => "MaveDB",
      "available" => 0,
      "enabled" => 0,
      "section" => "Functional effect",
      "helptip" => "MaveDB holds experimentally determined measures of variant effect",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/MaveDB.pm",
      "requires_data" => 1,
      "params"  => [
        "#file=/path/to/MaveDB_variants.tsv.gz"
      ],
      "species" => [
        "homo_sapiens"
      ],
    },

    # VARITY
    {
      "key" => "VARITY",
      "label" => "VARITY",
      "available" => 0,
      "enabled" => 0,
      "section" => "Pathogenicity predictions",
      "helptip" => "VARITY is a tool to predict pathogenicity of rare human missense variants. VARITY uses a gradient boosting tree model trained with rare variants from multiple genomic annotations and based on clinical significance.",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/VARITY.pm",
      "requires_data" => 1,
      "params"  => [
        "#file=/path/to/varity_all_predictions.tsv.gz"
      ],
      "species" => [
        "homo_sapiens"
      ],
    },

    # mutfunc
    {
      "key" => "mutfunc",
      "label" => "mutfunc",
      "available" => 0,
      "enabled" => 0,
      "section" => "Protein annotation",
      "helptip" => "mutfunc predicts destabilization effect of protein structure, interaction, regulatory region etc. caused by a variant",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/mutfunc.pm",
      "requires_data" => 1,
      "params"  => [
        "#db=/path/to/mutfunc_data.db",
        "@*"
      ],
      "species" => [
        "homo_sapiens",
        "saccharomyces_cerevisiae"
      ],
      "form" => [
        {
          "name" => "mutfunc_fields",
          "label" => "Fields to include",
          "helptip" => "Select which analysis you want to see in the output",
          "value" => "",
          "type" => "checklist",
          "multiple" => 1,
          "style" => "height:150px",
          "values" => [
            { "value" => "motif=1", "caption" => "Linear Motifs", "helptip" => "Effect on linear motifs", 'checked' => 1 },
            { "value" => "int=1", "caption" => "Protein Interactions", "helptip" => "Effect on protein interactions", 'checked' => 1 },
            { "value" => "mod=1", "caption" => "Protein Structure", "helptip" => "Effect on protein structure", 'checked' => 1 },
            { "value" => "exp=1", "caption" => "Protein Structure (exp.)", "helptip" => "Effect on protein structure (experimental)", 'checked' => 1 }
          ],
        }
      ]
    },

    ## REGULATORY IMPACT
    ####################

    # Enformer
    {
      "key" => "Enformer",
      "label" => "Enformer",
      "available" => 0,
      "enabled" => 0,
      "section" => "Regulatory impact",
      "helptip" => "Predictions of variant impact on gene expression",
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/Enformer.pm",
      "requires_data" => 1,
      "params"  => [
        "#file=/path/to/enformer_variants.vcf.gz"
      ],
      "species" => [
        "homo_sapiens"
      ],
    },


    ## OTHER
    ########

    # CSN
    {
      "key" => "CSN",
      "helptip" => "Reports Clinical Sequencing Nomenclature (CSN) for variants",
      "available" => 0,
      "enabled" => 0,
      "plugin_url" => "https://raw.githubusercontent.com/Ensembl/VEP_plugins/release/115/CSN.pm",
    },
  ]
};
